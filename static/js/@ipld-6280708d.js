import{e as s,d as i,T as o,a as r}from"./cborg-03b6df65.js";import{C as d}from"./multiformats-1a570ced.js";const a=42;function l(e){if(e.asCID!==e)return null;const n=d.asCID(e);if(!n)return null;const t=new Uint8Array(n.bytes.byteLength+1);return t.set(n.bytes,1),[new o(r.tag,a),new o(r.bytes,t)]}function f(){throw new Error("`undefined` is not supported by the IPLD Data Model and cannot be encoded")}function u(e){if(Number.isNaN(e))throw new Error("`NaN` is not supported by the IPLD Data Model and cannot be encoded");if(e===1/0||e===-1/0)throw new Error("`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded");return null}const y={float64:!0,typeEncoders:{Object:l,undefined:f,number:u}};function b(e){if(e[0]!==0)throw new Error("Invalid CID for CBOR tag 42; expected leading 0x00");return d.decode(e.subarray(1))}const c={allowIndefinite:!1,coerceUndefinedToNull:!0,allowNaN:!1,allowInfinity:!1,allowBigInt:!0,strict:!0,useMaps:!1,tags:[]};c.tags[a]=b;const p="dag-cbor",I=113,w=e=>s(e,y),D=e=>i(e,c),h=Object.freeze(Object.defineProperty({__proto__:null,name:p,code:I,encode:w,decode:D},Symbol.toStringTag,{value:"Module"}));export{D as a,I as c,h as d,w as e};
